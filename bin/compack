#!/usr/bin/env node

/**
 * @license
 * Copyright (c) 2016 Rajasegar Chandran. All rights reserved.
 */

// jshint node: true
'use strict';

const nopt = require('nopt');
const fs = require('fs');
const path = require('path');
const compack = require('../lib/compack');
const watch = require("watch");

let options = {
    path: "",
    css: "css",
    html:"html",
    es6: false
};

const help = [
    'compack: A Bundler for Web Components - Bundle your web component assets HTML, CSS and JS into one file',
    '',
    'Usage:',
    'compack --create my-component',
    'compack bundle',
    '',
    'Options:',
    '   -h|--help: print this message',
    '   -v|--version: print version number',
].join("\n");

let args = nopt(
    {
        help:Boolean,
        version: Boolean,
        create: path,
        css: String,
        html: String,
        es6: Boolean,
        server: Boolean,
        watch: Boolean,
        add: path
    },
    {
        'h': ['--help'],
        'v': ['--version'],
        'c': ['--create'],
        's': ['--server',"server"],
        'w': ['--watch'],
        'a': ['--add']
    }
);

function printHelp() {
    console.log(help);
}

let pkg = require("../package.json");

function printVersion() {
    console.log("compack: ",pkg.version);
}

if(args.version) {
    printVersion();
    process.exit(0);
}

if(args.help) {
    printHelp();
    process.exit(0);
}

// CSS Preprocessor options
if(args.css) {
    options.css = args.css;
}

// HTML Template options
if(args.html) {
    options.html = args.html;
}

// ES6 option
if(args.es6) {
    options.es6 = args.es6;
}

// create boilerplate
if(args.create) {
    // create applicaton
    console.log("Creating component: ",args.create );
    options.path = args.create;

    (new compack(options)).createComponent();

    process.exit(0);
}

// add component(s)
if(args.add) {
    // add component
    console.log("Adding component: ", args.add);
    options.path = args.add;
    (new compack(options)).addComponent();
    process.exit(0);
}

// start development server
if(args.server) {
    //start the server
    console.log("Starting compack server: ");
    var liveServer = require("live-server");

    var params = {
        port: 8181,
        host: "0.0.0.0",
        file: "test.html"
    };

    (new compack(options)).bundle();
    liveServer.start(params);
    watch.createMonitor("./components",function(monitor) {
        monitor.on("changed", function(f,curr,prev) {
            console.log("File modified: " + f);
            (new compack(options)).bundle();
        });
    });
}

// start watching file changes
if(args.watch) {
    watch.createMonitor("./components",function(monitor) {
        monitor.on("changed", function(f,curr,prev) {
            console.log("File modified: " + f);
            (new compack(options)).bundle();
        });
    });
}

if(args.argv.original.length === 0) {
    (new compack(options)).bundle();
}

