#!/usr/bin/env node

/**
 * @license
 * Copyright (c) 2016 Rajasegar Chandran. All rights reserved.
 */

// jshint node: true
'use strict';

var nopt = require('nopt');
var fs = require('fs');
var path = require('path');
var mkdirp = require('mkdirp');
var compack = require('../lib/compack');

var help = [
    'compack: A Bundler for Web Components - Bundle your web component assets HTML, CSS and JS into one file',
    '',
    'Usage:',
    'compack create my-component',
    'compack bundle',
    '',
    'Options:',
    '   -h|--help: print this message',
    '   -v|--version: print version number',
].join("\n");

var args = nopt(
    {
        help:Boolean,
        version: Boolean,
        create: Boolean 
    },
    {
        'h': ['--help'],
        'v': ['--version'],
        'c': ['--create']
    }
);

//console.log(args);

function printHelp() {
    console.log(help);
}

var pkg = require("../package.json");

function printVersion() {
    console.log("compack: ",pkg.version);
}

if(args.version) {
    printVersion();
    process.exit(0);
}

if(args.help) {
    printHelp();
    process.exit(0);
}

if(args.create) {
    // create applicaton
    console.log("Creating component: ", args.argv.remain[0]);
    createComponent(args.argv.remain[0]);
    process.exit(0);
}

function createComponent(destinationPath) {
    var componentName = path.basename(path.resolve(destinationPath));
    var absPath = path.resolve(destinationPath);
    console.log(absPath);

    var html = loadTemplate('component.html');
    var css = loadTemplate('component.css');
    var js = loadTemplate('component.js');
    var configTemplate = loadTemplate('compack.config.js');
    var dirMode = 0o755;
    fs.mkdirSync(absPath,dirMode);
    fs.mkdirSync(absPath + '/components',dirMode);
    fs.mkdirSync(absPath + '/components/' + componentName,dirMode);
    write(absPath + '/components/' + componentName + '/' + componentName + '.html',html);
    write(absPath + '/components/' + componentName + '/' + componentName + '.css',css);
    write(absPath + '/components/' + componentName + '/' + componentName + '.js', js);
    write(absPath + '/compack.config.js', configTemplate);

}

function write(path,str,mode) {
    fs.writeFileSync(path,str, {mode: mode || '0666'});
    console.log('   create :' + path);
}


function mkdir(path,fn) {
    mkdirp(path,0o755,function(err) {
    if(err) throw err;
    console.log('   create : ' + path);
    fn && fn();
    });
}

function loadTemplate(name) {
    return fs.readFileSync(path.join(__dirname,'..','templates',name),'utf-8');
}

if(args.argv.original.length === 0) {
    (new compack(args)).bundle();
}

